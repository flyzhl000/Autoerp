import fsys.codepage;

namespace carl.sql

namespace ms{
	string = ..string;
	table = ..table;
	
	getInsertSql = function(tabname,tab, utf8){
		var t = {};
		table.push(t,"insert into " + tabname + "(");
		for k,v in table.eachName(tab){
			table.push(t,k,",");
		}
		t[#t] = "";
		table.push(t,")values(");
		for k,v in table.eachName(tab){
			if(type(v) == type.string){
				if(utf8 && !..fsys.codepage.isTextUtf8(v)) v = string.fromto(v,0,65001);
				if(string.lower(v) == "getdate()"){				
					table.push(t,v,",");
				}else {
					if(utf8) table.push(t,"N");
					table.push(t,"'",string.replace(v,"'","''"),"'",",");
				}
			}
			elseif(type(v) == type.number){
				table.push(t,v,",");
			}
		}
		t[#t] = "";
		table.push(t,")")
		return string.join(t); 
	};
	
	getUpdateSql = function(tabname,tab,where,utf8){
		var t = {};
		table.push(t,"update " + tabname + " set ");
		for k,v in table.eachName(tab){
			if(type(v) == type.string){
				if(utf8 && !..fsys.codepage.isTextUtf8(v)) v = string.fromto(v,0,65001);
				if(string.lower(v) == "getdate()"){
					table.push(t,k,"=",v,",")
				}
				else {
					table.push(t,k,"=");
					if(utf8) table.push(t,"N");
					table.push(t,"'",string.replace(v,"'","''"),"'",",")
				}
			}
			elseif(type(v) == type.number){
				table.push(t,k,"=",v,",");
			}
		}
		t[#t] = "";
		table.push(t," where ",where);
		return string.join(t);
	};
	
	getPageSql=function(sql, currentPage, pageSize, orderRowName,countName="rowCount",rowName="rowId"){
		if( !#orderRowName ) return sql;
		currentPage = tonumber(currentPage) : 1;
		pageSize = tonumber(pageSize) : 30;
    	var curr = currentPage < 1 ? 1 : currentPage;
    	var startRowNum = (curr - 1) * pageSize + 1;	
    	var endRowNum = startRowNum + pageSize - 1;	
    	var mysql = "SELECT *,(SELECT COUNT(*)  FROM( " + sql + " )AS h) AS '" + countName + "' FROM (SELECT *,ROW_NUMBER() OVER ";
    	mysql +="(ORDER BY " + orderRowName + ") AS '" + rowName + "' FROM ( " + sql + ")AS c) a  ";
    	mysql +="WHERE a." + rowName + " BETWEEN " + startRowNum + "  AND " + endRowNum;
    	return mysql;
	};
}

namespace my{
	string = ..string;
	table = ..table;
	
	getInsertSql = function(tabname,tab, utf8){
		var t = {};
		table.push(t,"insert into " + tabname + "(");
		for k,v in table.eachName(tab){
			table.push(t,k,",");
		}
		t[#t] = "";
		table.push(t,")values(");
		for k,v in table.eachName(tab){
			if(type(v) == type.string){
				if(utf8 && !..fsys.codepage.isTextUtf8(v)) v = string.fromto(v,0,65001);
				if(string.lower(v) == "now()"){				
					table.push(t,v,",");
				}else {
					v = string.replace(v,"'","''");
					v = string.replace(v,"@\","\\");
					table.push(t,"'",v,"'",",");
				}
			}
			elseif(type(v) == type.number){
				table.push(t,v,",");
			}
		}
		t[#t] = "";
		table.push(t,")")
		return string.join(t); 
	};
	
	getUpdateSql = function(tabname,tab,where,utf8){
		var t = {};
		table.push(t,"update " + tabname + " set ");
		for k,v in table.eachName(tab){
			if(type(v) == type.string){
				if(utf8 && !..fsys.codepage.isTextUtf8(v)) v = string.fromto(v,0,65001);
				if(string.lower(v) == "now()"){
					table.push(t,k,"=",v,",")
				}
				else {
					table.push(t,k,"=");
					v = string.replace(v,"'","''");
					v = string.replace(v,"@\","\\");
					table.push(t,"'",v,"'",",")
				}
			}
			elseif(type(v) == type.number){
				table.push(t,k,"=",v,",");
			}
		}
		t[#t] = "";
		table.push(t," where ",where);
		return string.join(t);
	};
	
	getPageSql=function(sql, currentPage, pageSize, orderRowName,countName="rowCount"){
		if( !#orderRowName ) return sql;
		currentPage = tonumber(currentPage) : 1;
		pageSize = tonumber(pageSize) : 30;
    	var curr = currentPage < 1 ? 1 : currentPage;
    	var startRowNum = (curr - 1) * pageSize;	
    	var mysql = "SELECT *,(SELECT COUNT(*) FROM( " + sql + " )h) AS '" + countName + "' FROM( " + sql + ")c";
    	mysql += " ORDER BY " + orderRowName;
    	mysql += " LIMIT " + startRowNum + "," + pageSize;    	
    	return mysql;
	};
}